.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_source_auto_examples_plot_cloud_mask.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_source_auto_examples_plot_cloud_mask.py:


Example on how to calculate and plot cloud masks
------------------------------------------------

This example shows how to calculate a cloud mask and plot data



.. image:: /source/auto_examples/images/sphx_glr_plot_cloud_mask_001.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /Users/atheisen/Code/RadTraQ/examples/plot_cloud_mask.py:29: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.
      plt.show()





|


.. code-block:: default



    import radtraq
    import act
    import matplotlib.pyplot as plt

    # Read in sample data using ACT
    f = radtraq.tests.sample_files.EXAMPLE_KAZR
    obj = act.io.armfiles.read_netcdf(f)

    # Resample data for ease of processing
    ge = obj.resample(time='1min').nearest()

    # Calculate and apply cloud mask
    ge = radtraq.proc.cloud_mask.calc_cloud_mask(ge, 'reflectivity_copol', 'range')
    ge = ge.where(ge['mask2'] == 1)

    # Plot data using ACT
    display = act.plotting.TimeSeriesDisplay(ge)
    display.plot('reflectivity_copol', cmap='jet')
    display.axes[0].set_ylim([0, 20000])
    plt.show()

    ge.close()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  4.712 seconds)


.. _sphx_glr_download_source_auto_examples_plot_cloud_mask.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_cloud_mask.py <plot_cloud_mask.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_cloud_mask.ipynb <plot_cloud_mask.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
