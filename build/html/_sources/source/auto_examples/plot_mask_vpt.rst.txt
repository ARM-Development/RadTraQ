
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "source/auto_examples/plot_mask_vpt.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_source_auto_examples_plot_mask_vpt.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_source_auto_examples_plot_mask_vpt.py:


Example on how to calculate and plot average profiles
-----------------------------------------------------

This example shows how to calculate and plot average profiles
from masked data

.. GENERATED FROM PYTHON SOURCE LINES 9-51



.. image-sg:: /source/auto_examples/images/sphx_glr_plot_mask_vpt_001.png
   :alt: plot mask vpt
   :srcset: /source/auto_examples/images/sphx_glr_plot_mask_vpt_001.png
   :class: sphx-glr-single-img





.. code-block:: default



    import radtraq
    from act.io.armfiles import read_netcdf
    import matplotlib.pyplot as plt
    import numpy as np

    # Read in Example KAZR File using ACT
    obj = read_netcdf(radtraq.tests.sample_files.EXAMPLE_KAZR)

    # Resample to 1-minute to simplify processing
    obj = obj.resample(time='1min').nearest()

    # Process cloud mask in order to properly produce average VPT profiles through cloud
    obj = radtraq.proc.cloud_mask.calc_cloud_mask(obj, 'reflectivity_copol')

    # Variables to calculate average profiles
    variable = ['reflectivity_copol', 'mean_doppler_velocity_copol', 'reflectivity_xpol']

    # Create a grid to interpolate data onto - Needed for different radars
    first_height = 1500.
    ygrid = np.arange(first_height, 15000, 50)

    # Calculate average profiles
    obj = radtraq.proc.profile.calc_avg_profile(obj, variable=variable, first_height=first_height, ygrid=ygrid)

    # Showing how to do this for multiple radars
    # Set up dictionary for profile comparison plotting
    rad_dict = {'sgpkazrgeC1.b1': {'object': obj, 'variable': variable[0]},
                'sgpkazrge2C1.b1': {'object': obj, 'variable': variable[0]},
                'sgpkazrmdC1.b1': {'object': obj, 'variable': 'reflectivity_xpol'},
                'sgpkazrmd2C1.b1': {'object': obj, 'variable': 'reflectivity_xpol'}
                }

    # Plot up profiles and perform comparisons from data in dictionary
    display = radtraq.plotting.plot_avg_profile(rad_dict)

    # Show plot
    plt.show()

    # Close out object
    obj.close()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.767 seconds)


.. _sphx_glr_download_source_auto_examples_plot_mask_vpt.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_mask_vpt.py <plot_mask_vpt.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_mask_vpt.ipynb <plot_mask_vpt.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
